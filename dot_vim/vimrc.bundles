"----------------------------------------------------------------------
"" Vundle Settings
"----------------------------------------------------------------------
" :so % to refresh .vimrc after making changes
" :PluginInstall to install new stuff
" :PluginUpdate to update to latest versions
" :PluginClean to remove deleted plugins
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=$HOME/.vim/bundle/Vundle.vim

" alternatively, pass a path where Vundle should install plugins
call vundle#begin('$HOME/.vim/bundle')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-python/python-syntax'
Plugin 'easymotion/vim-easymotion'
Plugin 'humiaozuzu/tabbar'
Plugin 'preservim/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'google/yapf'
Plugin 'preservim/tagbar'
Plugin 'tpope/vim-commentary'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"----------------------------------------------------------------------
" Plugin related tweaks
"----------------------------------------------------------------------
" Plugin - Easy Motion
" <Leader>f{char} to move to {char}
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)
" s{char}{char} to move to {char}{char}
nmap s <Plug>(easymotion-overwin-f2)
" Move to line
map <Leader>l <Plug>(easymotion-bd-jk)
nmap <Leader>l <Plug>(easymotion-overwin-line)
" Move to word
map  <Leader>w <Plug>(easymotion-bd-w)
nmap <Leader>w <Plug>(easymotion-overwin-w)

" open NERDTree automatically when vim starts up on opening a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Map a specific key or shortcut to open NERDTree
map <C-n> :NERDTreeToggle<CR>

" Add Fuzzy logic in your vim's runtime path
set runtimepath^=$HOME/.vim/bundle/ctrlp.vim
let  g:ctrlp_working_path_mode = ''

" Map the ctrlp on the actual keys
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Autoformat with yapf from vim
map <Leader>y :call yapf#YAPF()<cr>
imap <Leader>y :call yapf#YAPF()<cr>

" Setting for the python syntax highlighting
let g:python_highlight_all = 1
let g:python_highlight_space_errors = 0

" Setting for tagbar
" https://github.com/preservim/tagbar
nmap <Leader>c :TagbarToggle<CR>
